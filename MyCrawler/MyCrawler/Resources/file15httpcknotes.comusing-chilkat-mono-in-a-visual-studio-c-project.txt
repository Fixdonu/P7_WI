<!DOCTYPE html>
<!--[if IE 6]>
<html id="ie6" lang="en-US">
<![endif]-->
<!--[if IE 7]>
<html id="ie7" lang="en-US">
<![endif]-->
<!--[if IE 8]>
<html id="ie8" lang="en-US">
<![endif]-->
<!--[if !(IE 6) & !(IE 7) & !(IE 8)]><!-->
<html lang="en-US">
<!--<![endif]-->
<head>
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width" />
<title>Using Chilkat Mono in a Visual Studio C# Project | Chilkat Tech Notes</title>
<link rel="profile" href="http://gmpg.org/xfn/11" />
<link rel="stylesheet" type="text/css" media="all" href="http://cknotes.com/wp-content/themes/twentyeleven/style.css" />
<link rel="pingback" href="http://cknotes.com/xmlrpc.php" />
<!--[if lt IE 9]>
<script src="http://cknotes.com/wp-content/themes/twentyeleven/js/html5.js" type="text/javascript"></script>
<![endif]-->
<link rel='dns-prefetch' href='//s0.wp.com' />
<link rel='dns-prefetch' href='//s.gravatar.com' />
<link rel='dns-prefetch' href='//s.w.org' />
<link rel="alternate" type="application/rss+xml" title="Chilkat Tech Notes &raquo; Feed" href="http://cknotes.com/feed/" />
<link rel="alternate" type="application/rss+xml" title="Chilkat Tech Notes &raquo; Comments Feed" href="http://cknotes.com/comments/feed/" />
		<script type="text/javascript">
			window._wpemojiSettings = {"baseUrl":"https:\/\/s.w.org\/images\/core\/emoji\/2.3\/72x72\/","ext":".png","svgUrl":"https:\/\/s.w.org\/images\/core\/emoji\/2.3\/svg\/","svgExt":".svg","source":{"concatemoji":"http:\/\/cknotes.com\/wp-includes\/js\/wp-emoji-release.min.js?ver=4.8.1"}};
			!function(a,b,c){function d(a){var b,c,d,e,f=String.fromCharCode;if(!k||!k.fillText)return!1;switch(k.clearRect(0,0,j.width,j.height),k.textBaseline="top",k.font="600 32px Arial",a){case"flag":return k.fillText(f(55356,56826,55356,56819),0,0),b=j.toDataURL(),k.clearRect(0,0,j.width,j.height),k.fillText(f(55356,56826,8203,55356,56819),0,0),c=j.toDataURL(),b===c&&(k.clearRect(0,0,j.width,j.height),k.fillText(f(55356,57332,56128,56423,56128,56418,56128,56421,56128,56430,56128,56423,56128,56447),0,0),b=j.toDataURL(),k.clearRect(0,0,j.width,j.height),k.fillText(f(55356,57332,8203,56128,56423,8203,56128,56418,8203,56128,56421,8203,56128,56430,8203,56128,56423,8203,56128,56447),0,0),c=j.toDataURL(),b!==c);case"emoji4":return k.fillText(f(55358,56794,8205,9794,65039),0,0),d=j.toDataURL(),k.clearRect(0,0,j.width,j.height),k.fillText(f(55358,56794,8203,9794,65039),0,0),e=j.toDataURL(),d!==e}return!1}function e(a){var c=b.createElement("script");c.src=a,c.defer=c.type="text/javascript",b.getElementsByTagName("head")[0].appendChild(c)}var f,g,h,i,j=b.createElement("canvas"),k=j.getContext&&j.getContext("2d");for(i=Array("flag","emoji4"),c.supports={everything:!0,everythingExceptFlag:!0},h=0;h<i.length;h++)c.supports[i[h]]=d(i[h]),c.supports.everything=c.supports.everything&&c.supports[i[h]],"flag"!==i[h]&&(c.supports.everythingExceptFlag=c.supports.everythingExceptFlag&&c.supports[i[h]]);c.supports.everythingExceptFlag=c.supports.everythingExceptFlag&&!c.supports.flag,c.DOMReady=!1,c.readyCallback=function(){c.DOMReady=!0},c.supports.everything||(g=function(){c.readyCallback()},b.addEventListener?(b.addEventListener("DOMContentLoaded",g,!1),a.addEventListener("load",g,!1)):(a.attachEvent("onload",g),b.attachEvent("onreadystatechange",function(){"complete"===b.readyState&&c.readyCallback()})),f=c.source||{},f.concatemoji?e(f.concatemoji):f.wpemoji&&f.twemoji&&(e(f.twemoji),e(f.wpemoji)))}(window,document,window._wpemojiSettings);
		</script>
		<style type="text/css">
img.wp-smiley,
img.emoji {
	display: inline !important;
	border: none !important;
	box-shadow: none !important;
	height: 1em !important;
	width: 1em !important;
	margin: 0 .07em !important;
	vertical-align: -0.1em !important;
	background: none !important;
	padding: 0 !important;
}
</style>
<link rel='stylesheet' id='jetpack_css-css'  href='http://cknotes.com/wp-content/plugins/jetpack/css/jetpack.css?ver=5.1' type='text/css' media='all' />
<script type='text/javascript' src='http://cknotes.com/wp-includes/js/jquery/jquery.js?ver=1.12.4'></script>
<script type='text/javascript' src='http://cknotes.com/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.4.1'></script>
<link rel='https://api.w.org/' href='http://cknotes.com/wp-json/' />
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://cknotes.com/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://cknotes.com/wp-includes/wlwmanifest.xml" /> 
<link rel='prev' title='Chilkat v9.5.0.67 Release Notes' href='http://cknotes.com/chilkat-v9-5-0-67-release-notes/' />
<link rel='next' title='Chilkat v9.5.0.68 Release Notes' href='http://cknotes.com/chilkat-v9-5-0-68-release-notes/' />
<meta name="generator" content="WordPress 4.8.1" />
<link rel="canonical" href="http://cknotes.com/using-chilkat-mono-in-a-visual-studio-c-project/" />
<link rel='shortlink' href='http://wp.me/p1-fu' />
<link rel="alternate" type="application/json+oembed" href="http://cknotes.com/wp-json/oembed/1.0/embed?url=http%3A%2F%2Fcknotes.com%2Fusing-chilkat-mono-in-a-visual-studio-c-project%2F" />
<link rel="alternate" type="text/xml+oembed" href="http://cknotes.com/wp-json/oembed/1.0/embed?url=http%3A%2F%2Fcknotes.com%2Fusing-chilkat-mono-in-a-visual-studio-c-project%2F&#038;format=xml" />

<link rel='dns-prefetch' href='//v0.wordpress.com'>

<!-- Jetpack Open Graph Tags -->
<meta property="og:type" content="article" />
<meta property="og:title" content="Using Chilkat Mono in a Visual Studio C# Project" />
<meta property="og:url" content="http://cknotes.com/using-chilkat-mono-in-a-visual-studio-c-project/" />
<meta property="og:description" content="The Chilkat Mono assembly can be used in a Visual Studio project (any version of Visual Studio). (From a programming perspective, using the Chilkat Mono classes is the same as using the Chilkat .NEâ€¦" />
<meta property="article:published_time" content="2017-05-11T16:38:14+00:00" />
<meta property="article:modified_time" content="2017-05-11T16:40:49+00:00" />
<meta property="og:site_name" content="Chilkat Tech Notes" />
<meta property="og:image" content="http://cknotes.com/wp-content/uploads/2016/10/cropped-dudeNpm-270x270.jpg" />
<meta property="og:image:width" content="200" />
<meta property="og:image:height" content="200" />
<meta property="og:locale" content="en_US" />
<meta name="twitter:image" content="http://cknotes.com/wp-content/uploads/2016/10/cropped-dudeNpm-270x270.jpg" />
<meta name="twitter:card" content="summary" />
<style type="text/css" id="syntaxhighlighteranchor"></style>
<link rel="icon" href="http://cknotes.com/wp-content/uploads/2016/10/cropped-dudeNpm-32x32.jpg" sizes="32x32" />
<link rel="icon" href="http://cknotes.com/wp-content/uploads/2016/10/cropped-dudeNpm-192x192.jpg" sizes="192x192" />
<link rel="apple-touch-icon-precomposed" href="http://cknotes.com/wp-content/uploads/2016/10/cropped-dudeNpm-180x180.jpg" />
<meta name="msapplication-TileImage" content="http://cknotes.com/wp-content/uploads/2016/10/cropped-dudeNpm-270x270.jpg" />
</head>

<body class="post-template-default single single-post postid-960 single-format-standard single-author singular two-column right-sidebar">
<div id="page" class="hfeed">
	<header id="branding" role="banner">
			<hgroup>
				<h1 id="site-title"><span><a href="http://cknotes.com/" rel="home">Chilkat Tech Notes</a></span></h1>
				<h2 id="site-description">Chilkat Software Tech Notes</h2>
			</hgroup>

			
								<form method="get" id="searchform" action="http://cknotes.com/">
		<label for="s" class="assistive-text">Search</label>
		<input type="text" class="field" name="s" id="s" placeholder="Search" />
		<input type="submit" class="submit" name="submit" id="searchsubmit" value="Search" />
	</form>
			
			<nav id="access" role="navigation">
				<h3 class="assistive-text">Main menu</h3>
								<div class="skip-link"><a class="assistive-text" href="#content">Skip to primary content</a></div>
												<div class="menu"><ul>
<li ><a href="http://cknotes.com/">Home</a></li></ul></div>
			</nav><!-- #access -->
	</header><!-- #branding -->


	<div id="main">

		<div id="primary">
			<div id="content" role="main">

				
					<nav id="nav-single">
						<h3 class="assistive-text">Post navigation</h3>
						<span class="nav-previous"><a href="http://cknotes.com/chilkat-v9-5-0-67-release-notes/" rel="prev"><span class="meta-nav">&larr;</span> Previous</a></span>
						<span class="nav-next"><a href="http://cknotes.com/chilkat-v9-5-0-68-release-notes/" rel="next">Next <span class="meta-nav">&rarr;</span></a></span>
					</nav><!-- #nav-single -->

					
<article id="post-960" class="post-960 post type-post status-publish format-standard hentry category-net tag-net tag-mono tag-visual-studio">
	<header class="entry-header">
		<h1 class="entry-title">Using Chilkat Mono in a Visual Studio C# Project</h1>

				<div class="entry-meta">
			<span class="sep">Posted on </span><a href="http://cknotes.com/using-chilkat-mono-in-a-visual-studio-c-project/" title="9:38 am" rel="bookmark"><time class="entry-date" datetime="2017-05-11T09:38:14+00:00">May 11, 2017</time></a><span class="by-author"> <span class="sep"> by </span> <span class="author vcard"><a class="url fn n" href="http://cknotes.com/author/admin/" title="View all posts by admin" rel="author">admin</a></span></span>		</div><!-- .entry-meta -->
			</header><!-- .entry-header -->

	<div class="entry-content">
		<p>The Chilkat Mono assembly can be used in a Visual Studio project (any version of Visual Studio).</p>
<p>(From a programming perspective, using the Chilkat Mono classes is the same as using the Chilkat .NET classes. The Chilkat .NET assemblies (available from <a href="https://www.chilkatsoft.com/downloads_DotNet.asp">Chilkat .NET Downloads</a> are mixed-mode assemblies. The outer-layer is fully managed, and the inner core contains the native C++ implementation. The Chilkat Mono solution is different: The .NET/Mono assembly is 100% managed, and there is a 2nd DLL that contains the native C++ implementation. The 100% managed assembly (internally) calls into the native DLL using P/Invoke.)</p>
<p>Actually.. you don&#8217;t even need to build the 100% managed assembly.Â  You can instead just add the Chilkat *.cs source files to your project directly.Â  (If you open one of the .cs source files, you&#8217;ll see how P/Invoke is used.)</p>
<ol>
<li>Created a Visual Studio project in C:\MyProject</li>
<li>Downloaded the Chilkat Mono .zip from <a href="https://www.chilkatsoft.com/mono.asp">https://www.chilkatsoft.com/mono.asp</a>Â  and unzipped in C:\MyProject</li>
<li>You now have a directory c:\MyProject\chilkatMono-9.5.0.Â Â Â  Within that directory, I have a chilkatCs directory, and a nativeDll directory.</li>
<li>Add all of the .cs source files from chilkatCs to your Visual Studio C# project.Â  (Note: If you find an &#8220;Accounts.cs&#8221; source file, delete it and do not add it.)</li>
<li>You don&#8217;t necessarily need to add all of the .cs sources, but you must add whatever is necessary to resolve all references.Â  For example, if you add MailMan.cs, you&#8217;ll certainly need to add Email.cs, and that in turn will require Cert.cs, etc.Â  A good strategy is to add everything, then delete various things that are likely unreferenced by other things.Â  For example, you can safely get rid of Csr.cs if not using CSR&#8217;s.</li>
<li>Add code to your app.Â  For example:<br />
<blockquote><p>Chilkat.Zip zip = new Chilkat.Zip();<br />
MessageBox.Show(zip.Version);</p></blockquote>
</li>
<li>You can try building and running, but it&#8217;ll fail because the native DLL won&#8217;t be found..</li>
<li>Copy the desired 32-bit or 64-bit native DLL into the same directory where your .exe is created.Â  For example, copy c:\MyProject\chilkatMono-9.5.0\nativeDll\windows\x64\chilkatMono-9_5_0.dll to c:\MyProject\bin\Debug</li>
<li>Assuming your Visual Studio project is &#8220;Any CPU&#8221;, and you don&#8217;t have a &#8220;Prefer 32-bit&#8221; checkbox checked (in Project Settings), and that you&#8217;re running on a 64-bit system, then the .NET runtime should locate and load the 64-bit chilkatMono-9_5_0.dll, and your program runs fine.</li>
</ol>
			</div><!-- .entry-content -->

	<footer class="entry-meta">
		This entry was posted in <a href="http://cknotes.com/category/net/" rel="category tag">.NET</a> and tagged <a href="http://cknotes.com/tag/net/" rel="tag">.NET</a>, <a href="http://cknotes.com/tag/mono/" rel="tag">Mono</a>, <a href="http://cknotes.com/tag/visual-studio/" rel="tag">Visual Studio</a> by <a href="http://cknotes.com/author/admin/">admin</a>. Bookmark the <a href="http://cknotes.com/using-chilkat-mono-in-a-visual-studio-c-project/" title="Permalink to Using Chilkat Mono in a Visual Studio C# Project" rel="bookmark">permalink</a>.		
			</footer><!-- .entry-meta -->
</article><!-- #post-960 -->

						<div id="comments">
	
	
	
	
</div><!-- #comments -->

				
			</div><!-- #content -->
		</div><!-- #primary -->


	</div><!-- #main -->

	<footer id="colophon" role="contentinfo">

			

			<div id="site-generator">
								<a href="https://wordpress.org/" title="Semantic Personal Publishing Platform">Proudly powered by WordPress</a>
			</div>
	</footer><!-- #colophon -->
</div><!-- #page -->

	<div style="display:none">
	</div>
<script type='text/javascript' src='http://cknotes.com/wp-includes/js/comment-reply.min.js?ver=4.8.1'></script>
<script type='text/javascript' src='https://s0.wp.com/wp-content/js/devicepx-jetpack.js?ver=201738'></script>
<script type='text/javascript' src='http://s.gravatar.com/js/gprofiles.js?ver=2017Sepaa'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var WPGroHo = {"my_hash":""};
/* ]]> */
</script>
<script type='text/javascript' src='http://cknotes.com/wp-content/plugins/jetpack/modules/wpgroho.js?ver=4.8.1'></script>
<script type='text/javascript' src='http://cknotes.com/wp-includes/js/wp-embed.min.js?ver=4.8.1'></script>
<script type='text/javascript' src='https://stats.wp.com/e-201738.js' async defer></script>
<script type='text/javascript'>
	_stq = window._stq || [];
	_stq.push([ 'view', {v:'ext',j:'1:5.1',blog:'1',post:'960',tz:'-7',srv:'cknotes.com'} ]);
	_stq.push([ 'clickTrackerInit', '1', '960' ]);
</script>

</body>
</html>